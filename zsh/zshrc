# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export LANG="zh_CN.UTF-8"
export LC_ALL="zh_CN.UTF-8"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="avit" #"agnoster"

# Ignore insecure completion-dependent directories
ZSH_DISABLE_COMPFIX="true"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-flow python zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# xcsong

# vi alias
alias vi='vim'

# git aliasess
if git --version > /dev/null 2>&1; then
   alias gb='git branch'
   alias gad='git add'
   alias gc='git checkout'
   alias gcb='git checkout -b'
   alias gs='git status'
   alias gst='git status'
   alias gcm='git checkout master'
   alias gpom='git pull origin master'
   alias gmm='git merge master'
fi

# ls aliases for linux (macos use bsd ls, which does not have --color option)
export LSCOLORS=Exfxcxdxbxegedabagacad
if [[ $(uname) != Darwin ]]; then
  alias ls="ls --color"
  alias ll="ls -l --color"
  alias la="ls -la --color"
  alias lsd="ls -lF -color | grep --color=never '^d'"
fi

# grep aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# avoid overwriting another file
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'

# cd aliases
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# gpustat aliases
alias nv='gpustat'
alias ns='nvidia-smi'

function mkcd () {
    mkdir $1;
    cd $1
}

# autojump
[[ -s $HOME/.autojump/etc/profile.d/autojump.sh ]] && source $HOME/.autojump/etc/profile.d/autojump.sh

# FIXME(xcsong): When to uncomment the following lines ?
# export PATH=$HOME/.local/bin:/usr/bin:$PATH
# export LD_LIBRARY_PATH=$HOME/.local/lib:/usr/lib:$LD_LIBRARY_PATH
cuda_version=12.1
if [ -d "/bucket/output/jfs-hdfs/user/xingchen.song/tools/cuda/cuda-${cuda_version}" ]; then
  unset LD_LIBRARY_PATH
  export CUDA_HOME=/bucket/output/jfs-hdfs/user/xingchen.song/tools/cuda/cuda-${cuda_version}
  export PATH=$CUDA_HOME/bin:$PATH
  export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:/usr/lib:/usr/lib64:$LD_LIBRARY_PATH
  # export LD_LIBRARY_PATH=$CUDA_HOME/lib:$LD_LIBRARY_PATH
  export LD_LIBRARY_PATH=$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH
  export CUDAToolkit_ROOT_DIR=$CUDA_HOME
  export CUDAToolkit_ROOT=$CUDA_HOME
  export CUDA_TOOLKIT_ROOT_DIR=$CUDA_HOME
  export CUDA_TOOLKIT_ROOT=$CUDA_HOME
  export CUDA_BIN_PATH=$CUDA_HOME
  export CUDA_PATH=$CUDA_HOME
  export CUDA_INC_PATH=$CUDA_HOME/targets/x86_64-linux
  export CFLAGS=-I$CUDA_HOME/targets/x86_64-linux/include:$CFLAGS
  export CXXFLAGS=-I$CUDA_HOME/targets/x86_64-linux/include:$CFLAGS
  export LDFLAGS=-L$CUDA_HOME/lib64:$CUDA_HOME/lib64/stubs:/usr/lib:/usr/lib64:$LDFLAGS
  export CUDAToolkit_TARGET_DIR=$CUDA_HOME/targets/x86_64-linux
fi

if [[ $(hostname -f) == LAPTOP-* ]]; then
  alias python='python3'
  # Install Ruby Gems to ~/gems
  export GEM_HOME="$HOME/gems"
  export PATH="$HOME/gems/bin:$PATH"
  export PATH="$PATH:$HOME/bin"

  # >>> conda initialize >>>
  # !! Contents within this block are managed by 'conda init' !!
  __conda_setup="$('/home/xcsong/tools/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/home/xcsong/tools/miniconda3/etc/profile.d/conda.sh" ]; then
          . "/home/xcsong/tools/miniconda3/etc/profile.d/conda.sh"
      else
          export PATH="/home/xcsong/tools/miniconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
  # <<< conda initialize <<<
fi

if [[ $(hostname -f) == *-PC* || $(whoami) == xcsong ]]; then
  export PATH=$PATH:$HOME/tools/go/bin
  source ~/proxy.sh
  # https://github.com/conda/conda/issues/9392#issuecomment-617345019
  unset CONDA_SHLVL
  # >>> conda initialize >>>
  # !! Contents within this block are managed by 'conda init' !!
  __conda_setup="$('/home/xcsong/tools/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/home/xcsong/tools/miniconda3/etc/profile.d/conda.sh" ]; then
          . "/home/xcsong/tools/miniconda3/etc/profile.d/conda.sh"
      else
          export PATH="/home/xcsong/tools/miniconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
  # <<< conda initialize <<<
fi

if [[ $(hostname -f) == *.hogpu.cc ]]; then
  export PATH=$PATH:$HOME/tools/go/bin:/bucket/output/jfs-hdfs/user/xingchen.song/tools/arcanist/bin/
  source /bucket/output/jfs-hdfs/user/xingchen.song/tools/proxy.sh
  # https://github.com/conda/conda/issues/9392#issuecomment-617345019
  unset CONDA_SHLVL
  # >>> conda initialize >>>
  # !! Contents within this block are managed by 'conda init' !!
  __conda_setup="$('/bucket/output/jfs-hdfs/user/xingchen.song/tools/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
  if [ $? -eq 0 ]; then
      eval "$__conda_setup"
  else
      if [ -f "/bucket/output/jfs-hdfs/user/xingchen.song/tools/miniconda3/etc/profile.d/conda.sh" ]; then
          . "/bucket/output/jfs-hdfs/user/xingchen.song/tools/miniconda3/etc/profile.d/conda.sh"
      else
          export PATH="/bucket/output/jfs-hdfs/user/xingchen.song/tools/miniconda3/bin:$PATH"
      fi
  fi
  unset __conda_setup
  # <<< conda initialize <<<
fi
